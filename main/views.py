from django.contrib.auth import authenticate, login, logout
from django.db import IntegrityError
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render
from django.urls import reverse
from .models import User,Instructor,Student,Course,Assignment,Submission    
from uuid import UUID
import simplejson as json
# Create your views here.
def home(request):
    return render(request, "main/home.html")

def test(request):
    mag = [39.9967,39.9365,39.8764,39.8163,39.7562,39.6961,39.636,39.5759,39.5158,39.4557,39.3956,39.3354,39.2753,39.2152,39.1551,39.095,39.0349,38.9747,38.9146,38.8545,38.7944,38.7343,38.6741,38.614,38.5539,38.4938,38.4336,38.3735,38.3134,38.2533,38.1931,38.133,38.0729,38.0127,37.9526,37.8925,37.8323,37.7722,37.7121,37.6519,37.5918,37.5316,37.4715,37.4113,37.3512,37.2911,37.2309,37.1708,37.1106,37.0505,36.9903,36.9302,36.87,36.8098,36.7497,36.6895,36.6294,36.5692,36.509,36.4489,36.3887,36.3286,36.2684,36.2082,36.148,36.0879,36.0277,35.9675,35.9073,35.8472,35.787,35.7268,35.6666,35.6064,35.5462,35.4861,35.4259,35.3657,35.3055,35.2453,35.1851,35.1249,35.0647,35.0045,34.9443,34.8841,34.8238,34.7636,34.7034,34.6432,34.583,34.5228,34.4625,34.4023,34.3421,34.2818,34.2216,34.1614,34.1011,34.0409,33.9807,33.9204,33.8602,33.7999,33.7397,33.6794,33.6191,33.5589,33.4986,33.4383,33.3781,33.3178,33.2575,33.1973,33.137,33.0767,33.0164,32.9561,32.8958,32.8355,32.7752,32.7149,32.6546,32.5943,32.534,32.4737,32.4133,32.353,32.2927,32.2323,32.172,32.1117,32.0513,31.991,31.9306,31.8703,31.8099,31.7495,31.6892,31.6288,31.5684,31.508,31.4477,31.3873,31.3269,31.2665,31.2061,31.1457,31.0852,31.0248,30.9644,30.904,30.8435,30.7831,30.7227,30.6622,30.6017,30.5413,30.4808,30.4203,30.3599,30.2994,30.2389,30.1784,30.1179,30.0574,29.9969,29.9364,29.8758,29.8153,29.7548,29.6942,29.6337,29.5731,29.5125,29.452,29.3914,29.3308,29.2702,29.2096,29.149,29.0884,29.0277,28.9671,28.9065,28.8458,28.7852,28.7245,28.6638,28.6031,28.5425,28.4818,28.421,28.3603,28.2996,28.2389,28.1781,28.1174,28.0566,27.9958,27.9351,27.8743,27.8135,27.7526,27.6918,27.631,27.5701,27.5093,27.4484,27.3875,27.3267,27.2658,27.2048,27.1439,27.083,27.022,26.9611,26.9001,26.8391,26.7781,26.7171,26.6561,26.5951,26.534,26.473,26.4119,26.3508,26.2897,26.2286,26.1674,26.1063,26.0451,25.9839,25.9228,25.8615,25.8003,25.7391,25.6778,25.6166,25.5553,25.494,25.4326,25.3713,25.3099,25.2486,25.1872,25.1258,25.0643,25.0029,24.9414,24.8799,24.8184,24.7569,24.6954,24.6338,24.5722,24.5106,24.449,24.3873,24.3257,24.264,24.2022,24.1405,24.0788,24.017,23.9552,23.8933,23.8315,23.7696,23.7077,23.6458,23.5838,23.5219,23.4599,23.3978,23.3358,23.2737,23.2116,23.1494,23.0873,23.0251,22.9629,22.9006,22.8383,22.776,22.7137,22.6513,22.5889,22.5265,22.464,22.4015,22.339,22.2764,22.2138,22.1512,22.0885,22.0258,21.9631,21.9003,21.8375,21.7747,21.7118,21.6489,21.5859,21.523,21.4599,21.3969,21.3337,21.2706,21.2074,21.1442,21.0809,21.0176,20.9542,20.8908,20.8274,20.7639,20.7004,20.6368,20.5731,20.5095,20.4458,20.382,20.3182,20.2543,20.1904,20.1264,20.0624,19.9983,19.9342,19.87,19.8058,19.7415,19.6772,19.6128,19.5484,19.4839,19.4193,19.3547,19.29,19.2253,19.1605,19.0956,19.0307,18.9657,18.9007,18.8356,18.7704,18.7052,18.6399,18.5745,18.5091,18.4436,18.378,18.3123,18.2466,18.1808,18.115,18.0491,17.9831,17.917,17.8508,17.7846,17.7183,17.6519,17.5855,17.5189,17.4523,17.3856,17.3188,17.2519,17.185,17.118,17.0508,16.9836,16.9163,16.849,16.7815,16.7139,16.6463,16.5785,16.5107,16.4427,16.3747,16.3066,16.2384,16.17,16.1016,16.0331,15.9645,15.8958,15.8269,15.758,15.689,15.6198,15.5506,15.4812,15.4117,15.3422,15.2725,15.2027,15.1328,15.0627,14.9926,14.9223,14.852,14.7815,14.7109,14.6401,14.5693,14.4983,14.4272,14.3559,14.2846,14.2131,14.1415,14.0697,13.9979,13.9259,13.8537,13.7815,13.709,13.6365,13.5638,13.491,13.418,13.3449,13.2717,13.1983,13.1248,13.0511,12.9773,12.9033,12.8292,12.755,12.6805,12.606,12.5313,12.4564,12.3814,12.3062,12.2308,12.1553,12.0797,12.0039,11.9279,11.8517,11.7754,11.699,11.6223,11.5455,11.4686,11.3914,11.3141,11.2366,11.159,11.0812,11.0032,10.925,10.8467,10.7681,10.6895,10.6106,10.5315,10.4523,10.3729,10.2933,10.2135,10.1335,10.0534,9.97304,9.89252,9.81181,9.73092,9.64984,9.56856,9.4871,9.40544,9.3236,9.24156,9.15933,9.0769,8.99429,8.91147,8.82846,8.74525,8.66185,8.57825,8.49445,8.41045,8.32625,8.24185,8.15726,8.07246,7.98746,7.90225,7.81685,7.73124,7.64543,7.55941,7.4732,7.38677,7.30015,7.21331,7.12627,7.03903,6.95158,6.86393,6.77606,6.68799,6.59972,6.51124,6.42255,6.33365,6.24454,6.15523,6.06571,5.97599,5.88605,5.79591,5.70556,5.615,5.52424,5.43326,5.34208,5.2507,5.1591,5.0673,4.97529,4.88308,4.79066,4.69803,4.60519,4.51215,4.41891,4.32546,4.2318,4.13794,4.04388,3.94961,3.85514,3.76047,3.66559,3.57051,3.47523,3.37975,3.28406,3.18818,3.0921,2.99582,2.89934,2.80266,2.70578,2.60871,2.51144,2.41398,2.31632,2.21847,2.12042,2.02218,1.92375,1.82513,1.72632,1.62731,1.52812,1.42874,1.32918,1.22942,1.12948,1.02936,0.929053,0.828561,0.727888,0.627033,0.525997,0.424782,0.323389,0.221817,0.120069,0.0181446,-0.0839545,-0.186228,-0.288674,-0.391292,-0.494081,-0.59704,-0.700168,-0.803464,-0.906927,-1.01056,-1.11435,-1.21831,-1.32243,-1.42671,-1.53115,-1.63576,-1.74052,-1.84544,-1.95051,-2.05574,-2.16113,-2.26667,-2.37236,-2.4782,-2.58419,-2.69033,-2.79662,-2.90306,-3.00964,-3.11636,-3.22323,-3.33024,-3.43739,-3.54468,-3.65212,-3.75968,-3.86739,-3.97523,-4.08321,-4.19132,-4.29956,-4.40793,-4.51643,-4.62507,-4.73382,-4.84271,-4.95172,-5.06086,-5.17012,-5.2795,-5.38901,-5.49863,-5.60838,-5.71824,-5.82822,-5.93832,-6.04853,-6.15885,-6.26929,-6.37984,-6.4905,-6.60126,-6.71214,-6.82313,-6.93422,-7.04542,-7.15672,-7.26813,-7.37964,-7.49125,-7.60296,-7.71477,-7.82667,-7.93868,-8.05078,-8.16298,-8.27527,-8.38766,-8.50014,-8.61271,-8.72537,-8.83812,-8.95096,-9.06389,-9.17691,-9.29001,-9.4032,-9.51647,-9.62982,-9.74326,-9.85678,-9.97038,-10.0841,-10.1978,-10.3117,-10.4256,-10.5396,-10.6536,-10.7678,-10.882,-10.9963,-11.1106,-11.2251,-11.3396,-11.4541,-11.5688,-11.6835,-11.7983,-11.9131,-12.028,-12.143,-12.2581,-12.3732,-12.4883,-12.6036,-12.7189,-12.8342,-12.9496,-13.0651,-13.1806,-13.2962,-13.4119,-13.5276,-13.6433,-13.7592,-13.875,-13.991,-14.1069,-14.223,-14.3391,-14.4552,-14.5714,-14.6876,-14.8039,-14.9203,-15.0366,-15.1531,-15.2696,-15.3861,-15.5027,-15.6193,-15.736,-15.8527,-15.9694,-16.0862,-16.2031,-16.32,-16.4369,-16.5539,-16.6709,-16.7879,-16.905,-17.0221,-17.1393,-17.2565,-17.3738,-17.491,-17.6084,-17.7257,-17.8431,-17.9605,-18.078,-18.1955,-18.313,-18.4306,-18.5482,-18.6658,-18.7835,-18.9012,-19.0189,-19.1367,-19.2545,-19.3723,-19.4902,-19.6081,-19.726,-19.8439,-19.9619,-20.0799,-20.1979,-20.316,-20.4341,-20.5522,-20.6703,-20.7885,-20.9067,-21.0249,-21.1431,-21.2614,-21.3797,-21.498,-21.6164,-21.7347,-21.8531,-21.9715,-22.0899,-22.2084,-22.3269,-22.4454,-22.5639,-22.6824,-22.801,-22.9196,-23.0382,-23.1568,-23.2755,-23.3941,-23.5128,-23.6315,-23.7502,-23.869,-23.9877,-24.1065,-24.2253,-24.3441,-24.463,-24.5818,-24.7007,-24.8196,-24.9385,-25.0574,-25.1763,-25.2953,-25.4142,-25.5332,-25.6522,-25.7712,-25.8902,-26.0093,-26.1283,-26.2474,-26.3665,-26.4856,-26.6047,-26.7238,-26.843,-26.9621,-27.0813,-27.2005,-27.3196,-27.4388,-27.5581,-27.6773,-27.7965,-27.9158,-28.035,-28.1543,-28.2736,-28.3929,-28.5122,-28.6315,-28.7509,-28.8702,-28.9896,-29.1089,-29.2283,-29.3477,-29.4671,-29.5865,-29.7059,-29.8253,-29.9447,-30.0642,-30.1836,-30.3031,-30.4225,-30.542,-30.6615,-30.781,-30.9005,-31.02,-31.1395,-31.2591,-31.3786,-31.4981,-31.6177,-31.7373,-31.8568,-31.9764,-32.096,-32.2156,-32.3352,-32.4548,-32.5744,-32.694,-32.8136,-32.9332,-33.0529,-33.1725,-33.2922,-33.4118,-33.5315,-33.6512,-33.7708,-33.8905,-34.0102,-34.1299,-34.2496,-34.3693,-34.489,-34.6087,-34.7285,-34.8482,-34.9679,-35.0877,-35.2074,-35.3272,-35.4469,-35.5667,-35.6864,-35.8062,-35.926,-36.0457,-36.1655,-36.2853,-36.4051,-36.5249,-36.6447,-36.7645,-36.8843,-37.0041,-37.1239,-37.2438,-37.3636,-37.4834,-37.6033,-37.7231,-37.8429,-37.9628,-38.0826,-38.2025,-38.3223,-38.4422,-38.5621,-38.6819,-38.8018,-38.9217,-39.0416,-39.1614,-39.2813,-39.4012,-39.5211,-39.641,-39.7609,-39.8808,-40.0007,-40.1206,-40.2405,-40.3604,-40.4803,-40.6003,-40.7202,-40.8401,-40.96,-41.0799,-41.1999,-41.3198,-41.4397,-41.5597,-41.6796,-41.7996,-41.9195,-42.0395,-42.1594,-42.2794,-42.3993,-42.5193,-42.6392,-42.7592,-42.8792,-42.9991,-43.1191,-43.2391,-43.359,-43.479,-43.599,-43.719,-43.839,-43.9589,-44.0789,-44.1989,-44.3189,-44.4389,-44.5589,-44.6789,-44.7989,-44.9189,-45.0389,-45.1589,-45.2789,-45.3989,-45.5189,-45.6389,-45.7589,-45.8789,-45.9989,-46.1189,-46.2389,-46.3589,-46.479,-46.599,-46.719,-46.839,-46.959,-47.0791,-47.1991,-47.3191,-47.4391,-47.5592,-47.6792,-47.7992,-47.9193,-48.0393,-48.1593,-48.2794,-48.3994,-48.5195,-48.6395,-48.7595,-48.8796]
    ph = [-91.59114,-91.60217,-91.61329,-91.62447,-91.63574,-91.64708,-91.65851,-91.67001,-91.68159,-91.69325,-91.70499,-91.71681,-91.72872,-91.74071,-91.75278,-91.76493,-91.77717,-91.78949,-91.8019,-91.8144,-91.82698,-91.83964,-91.8524,-91.86524,-91.87818,-91.8912,-91.90431,-91.91752,-91.93081,-91.9442,-91.95768,-91.97125,-91.98492,-91.99868,-92.01254,-92.02649,-92.04054,-92.05468,-92.06893,-92.08327,-92.09771,-92.11226,-92.1269,-92.14164,-92.15649,-92.17144,-92.18649,-92.20165,-92.21691,-92.23227,-92.24775,-92.26333,-92.27901,-92.29481,-92.31072,-92.32673,-92.34286,-92.3591,-92.37545,-92.39191,-92.40849,-92.42518,-92.44199,-92.45891,-92.47595,-92.49311,-92.51038,-92.52778,-92.5453,-92.56293,-92.58069,-92.59858,-92.61658,-92.63471,-92.65297,-92.67135,-92.68986,-92.70849,-92.72726,-92.74615,-92.76518,-92.78433,-92.80362,-92.82304,-92.8426,-92.86229,-92.88212,-92.90208,-92.92218,-92.94242,-92.9628,-92.98333,-93.00399,-93.02479,-93.04574,-93.06683,-93.08807,-93.10946,-93.13099,-93.15267,-93.1745,-93.19648,-93.21862,-93.2409,-93.26334,-93.28593,-93.30868,-93.33159,-93.35465,-93.37788,-93.40126,-93.4248,-93.44851,-93.47238,-93.49641,-93.52061,-93.54498,-93.56951,-93.59422,-93.61909,-93.64413,-93.66935,-93.69474,-93.72031,-93.74605,-93.77196,-93.79806,-93.82433,-93.85079,-93.87743,-93.90425,-93.93126,-93.95845,-93.98582,-94.01339,-94.04115,-94.06909,-94.09723,-94.12556,-94.15409,-94.18281,-94.21173,-94.24085,-94.27016,-94.29968,-94.3294,-94.35933,-94.38946,-94.41979,-94.45034,-94.48109,-94.51206,-94.54323,-94.57462,-94.60623,-94.63805,-94.67009,-94.70235,-94.73483,-94.76753,-94.80046,-94.83361,-94.86699,-94.90059,-94.93443,-94.9685,-95.0028,-95.03733,-95.0721,-95.10711,-95.14236,-95.17785,-95.21358,-95.24955,-95.28577,-95.32223,-95.35895,-95.39591,-95.43313,-95.4706,-95.50833,-95.54631,-95.58455,-95.62305,-95.66182,-95.70084,-95.74014,-95.7797,-95.81953,-95.85963,-95.9,-95.94064,-95.98157,-96.02277,-96.06425,-96.10601,-96.14805,-96.19038,-96.23299,-96.2759,-96.31909,-96.36258,-96.40636,-96.45044,-96.49482,-96.53949,-96.58447,-96.62975,-96.67534,-96.72124,-96.76744,-96.81396,-96.86079,-96.90794,-96.9554,-97.00318,-97.05129,-97.09972,-97.14847,-97.19755,-97.24696,-97.29671,-97.34679,-97.3972,-97.44795,-97.49905,-97.55048,-97.60226,-97.65439,-97.70686,-97.75969,-97.81286,-97.8664,-97.92029,-97.97454,-98.02916,-98.08413,-98.13948,-98.19519,-98.25127,-98.30773,-98.36456,-98.42177,-98.47936,-98.53733,-98.59568,-98.65443,-98.71356,-98.77308,-98.833,-98.89331,-98.95402,-99.01513,-99.07665,-99.13857,-99.2009,-99.26363,-99.32679,-99.39035,-99.45434,-99.51874,-99.58357,-99.64882,-99.71449,-99.7806,-99.84714,-99.91412,-99.98153,-100.0494,-100.1177,-100.1864,-100.2556,-100.3252,-100.3953,-100.4659,-100.5369,-100.6083,-100.6802,-100.7526,-100.8255,-100.8988,-100.9726,-101.0468,-101.1216,-101.1968,-101.2725,-101.3487,-101.4254,-101.5026,-101.5802,-101.6584,-101.7371,-101.8162,-101.8959,-101.976,-102.0567,-102.1379,-102.2196,-102.3018,-102.3845,-102.4678,-102.5516,-102.6359,-102.7207,-102.8061,-102.892,-102.9784,-103.0654,-103.1529,-103.2409,-103.3295,-103.4187,-103.5084,-103.5987,-103.6895,-103.7809,-103.8728,-103.9653,-104.0584,-104.152,-104.2462,-104.341,-104.4364,-104.5323,-104.6288,-104.7259,-104.8236,-104.9219,-105.0208,-105.1203,-105.2203,-105.321,-105.4222,-105.5241,-105.6266,-105.7297,-105.8333,-105.9376,-106.0426,-106.1481,-106.2542,-106.361,-106.4684,-106.5764,-106.6851,-106.7943,-106.9042,-107.0148,-107.126,-107.2378,-107.3502,-107.4633,-107.577,-107.6914,-107.8064,-107.9221,-108.0384,-108.1554,-108.273,-108.3913,-108.5103,-108.6299,-108.7501,-108.8711,-108.9926,-109.1149,-109.2378,-109.3614,-109.4856,-109.6106,-109.7361,-109.8624,-109.9893,-110.117,-110.2452,-110.3742,-110.5039,-110.6342,-110.7652,-110.8968,-111.0292,-111.1622,-111.296,-111.4304,-111.5655,-111.7012,-111.8377,-111.9748,-112.1126,-112.2511,-112.3903,-112.5302,-112.6708,-112.812,-112.9539,-113.0966,-113.2399,-113.3838,-113.5285,-113.6739,-113.8199,-113.9666,-114.114,-114.2621,-114.4108,-114.5603,-114.7104,-114.8612,-115.0126,-115.1648,-115.3176,-115.4711,-115.6252,-115.7801,-115.9355,-116.0917,-116.2485,-116.406,-116.5641,-116.7229,-116.8824,-117.0425,-117.2033,-117.3647,-117.5267,-117.6894,-117.8527,-118.0167,-118.1813,-118.3465,-118.5124,-118.6789,-118.846,-119.0138,-119.1821,-119.3511,-119.5206,-119.6908,-119.8616,-120.0329,-120.2049,-120.3775,-120.5506,-120.7243,-120.8986,-121.0734,-121.2489,-121.4248,-121.6014,-121.7785,-121.9561,-122.1343,-122.313,-122.4923,-122.672,-122.8523,-123.0331,-123.2144,-123.3962,-123.5786,-123.7614,-123.9446,-124.1284,-124.3126,-124.4973,-124.6825,-124.8681,-125.0541,-125.2406,-125.4276,-125.6149,-125.8027,-125.9908,-126.1794,-126.3684,-126.5577,-126.7475,-126.9376,-127.1281,-127.3189,-127.5101,-127.7016,-127.8935,-128.0857,-128.2782,-128.471,-128.6641,-128.8575,-129.0512,-129.2452,-129.4394,-129.6339,-129.8287,-130.0237,-130.2189,-130.4144,-130.61,-130.8059,-131.002,-131.1982,-131.3947,-131.5913,-131.788,-131.9849,-132.182,-132.3792,-132.5765,-132.774,-132.9715,-133.1692,-133.3669,-133.5647,-133.7626,-133.9605,-134.1585,-134.3565,-134.5546,-134.7526,-134.9507,-135.1488,-135.3469,-135.545,-135.743,-135.941,-136.139,-136.3369,-136.5347,-136.7325,-136.9302,-137.1278,-137.3253,-137.5226,-137.7199,-137.917,-138.114,-138.3109,-138.5076,-138.7041,-138.9004,-139.0966,-139.2926,-139.4883,-139.6839,-139.8792,-140.0743,-140.2692,-140.4638,-140.6582,-140.8523,-141.0461,-141.2397,-141.433,-141.6259,-141.8186,-142.0109,-142.203,-142.3947,-142.586,-142.777,-142.9677,-143.158,-143.3479,-143.5375,-143.7266,-143.9154,-144.1038,-144.2917,-144.4793,-144.6664,-144.8531,-145.0394,-145.2252,-145.4106,-145.5955,-145.78,-145.964,-146.1475,-146.3306,-146.5131,-146.6952,-146.8767,-147.0578,-147.2383,-147.4184,-147.5979,-147.7769,-147.9553,-148.1332,-148.3106,-148.4874,-148.6637,-148.8394,-149.0145,-149.1891,-149.3631,-149.5365,-149.7093,-149.8816,-150.0533,-150.2243,-150.3948,-150.5647,-150.7339,-150.9026,-151.0706,-151.238,-151.4048,-151.571,-151.7366,-151.9015,-152.0658,-152.2294,-152.3924,-152.5548,-152.7165,-152.8776,-153.038,-153.1978,-153.3569,-153.5154,-153.6732,-153.8304,-153.9869,-154.1427,-154.2978,-154.4523,-154.6061,-154.7593,-154.9118,-155.0636,-155.2147,-155.3651,-155.5149,-155.664,-155.8124,-155.9601,-156.1072,-156.2536,-156.3993,-156.5443,-156.6886,-156.8322,-156.9752,-157.1175,-157.259,-157.4,-157.5402,-157.6797,-157.8185,-157.9567,-158.0942,-158.231,-158.3671,-158.5025,-158.6373,-158.7713,-158.9047,-159.0374,-159.1694,-159.3007,-159.4314,-159.5614,-159.6907,-159.8193,-159.9473,-160.0745,-160.2011,-160.327,-160.4523,-160.5769,-160.7008,-160.824,-160.9466,-161.0685,-161.1898,-161.3104,-161.4303,-161.5496,-161.6682,-161.7861,-161.9034,-162.0201,-162.1361,-162.2514,-162.3661,-162.4802,-162.5936,-162.7064,-162.8185,-162.93,-163.0408,-163.1511,-163.2607,-163.3696,-163.4779,-163.5856,-163.6927,-163.7992,-163.905,-164.0102,-164.1148,-164.2188,-164.3222,-164.425,-164.5272,-164.6287,-164.7297,-164.83,-164.9298,-165.029,-165.1275,-165.2255,-165.3229,-165.4197,-165.516,-165.6116,-165.7067,-165.8012,-165.8951,-165.9885,-166.0813,-166.1735,-166.2651,-166.3562,-166.4468,-166.5367,-166.6262,-166.715,-166.8034,-166.8912,-166.9784,-167.0651,-167.1513,-167.2369,-167.322,-167.4066,-167.4906,-167.5741,-167.6571,-167.7396,-167.8215,-167.903,-167.9839,-168.0643,-168.1442,-168.2236,-168.3025,-168.3809,-168.4589,-168.5363,-168.6132,-168.6896,-168.7656,-168.841,-168.916,-168.9905,-169.0646,-169.1381,-169.2112,-169.2838,-169.356,-169.4277,-169.4989,-169.5696,-169.64,-169.7098,-169.7792,-169.8482,-169.9167,-169.9848,-170.0524,-170.1196,-170.1864,-170.2527,-170.3186,-170.384,-170.4491,-170.5137,-170.5779,-170.6416,-170.705,-170.7679,-170.8305,-170.8926,-170.9543,-171.0156,-171.0765,-171.137,-171.1972,-171.2569,-171.3162,-171.3751,-171.4337,-171.4919,-171.5496,-171.607,-171.664,-171.7207,-171.777,-171.8329,-171.8884,-171.9435,-171.9983,-172.0528,-172.1068,-172.1605,-172.2139,-172.2669,-172.3196,-172.3719,-172.4238,-172.4754,-172.5267,-172.5776,-172.6282,-172.6784,-172.7283,-172.7779,-172.8272,-172.8761,-172.9247,-172.9729,-173.0209,-173.0685,-173.1158,-173.1628,-173.2095,-173.2558,-173.3019,-173.3476,-173.393,-173.4382,-173.483,-173.5275,-173.5717,-173.6157,-173.6593,-173.7026,-173.7457,-173.7885,-173.8309,-173.8731,-173.915,-173.9566,-173.998,-174.039,-174.0798,-174.1203,-174.1606,-174.2005,-174.2402,-174.2796,-174.3188,-174.3577,-174.3963,-174.4347,-174.4728,-174.5107,-174.5483,-174.5856,-174.6227,-174.6595,-174.6961,-174.7325,-174.7686,-174.8044,-174.84,-174.8754,-174.9105,-174.9454,-174.9801,-175.0145,-175.0487,-175.0826,-175.1163,-175.1498,-175.1831,-175.2161,-175.2489,-175.2815,-175.3139,-175.346,-175.378,-175.4097,-175.4412,-175.4725,-175.5035,-175.5344,-175.565,-175.5955,-175.6257,-175.6557,-175.6856,-175.7152,-175.7446,-175.7738,-175.8028,-175.8316,-175.8603,-175.8887,-175.9169,-175.945,-175.9728,-176.0005,-176.028,-176.0552,-176.0823,-176.1093,-176.136,-176.1625,-176.1889,-176.2151,-176.2411,-176.2669,-176.2926,-176.318,-176.3433,-176.3685,-176.3934,-176.4182,-176.4428,-176.4673,-176.4916,-176.5157,-176.5396,-176.5634,-176.587,-176.6105,-176.6338,-176.657,-176.6799,-176.7028,-176.7254,-176.748,-176.7703,-176.7925,-176.8146,-176.8365,-176.8582,-176.8798,-176.9013,-176.9226,-176.9438,-176.9648,-176.9857,-177.0064,-177.027,-177.0475,-177.0678,-177.0879,-177.108,-177.1279,-177.1476,-177.1672,-177.1867,-177.2061,-177.2253,-177.2444,-177.2634,-177.2822,-177.3009,-177.3195,-177.3379,-177.3562,-177.3744,-177.3925,-177.4104,-177.4282,-177.4459,-177.4635,-177.481,-177.4983,-177.5155,-177.5326,-177.5496,-177.5665,-177.5832,-177.5999,-177.6164,-177.6328,-177.6491,-177.6653,-177.6813,-177.6973,-177.7131,-177.7289,-177.7445,-177.76,-177.7755,-177.7908,-177.806,-177.8211,-177.8361,-177.851,-177.8658,-177.8805,-177.8951,-177.9096,-177.9239,-177.9382]
    omega = [0.1,0.1006939,0.1013925,0.1020961,0.1028045,0.1035178,0.1042361,0.1049593,0.1056876,0.1064209,0.1071593,0.1079029,0.1086516,0.1094055,0.1101646,0.110929,0.1116987,0.1124737,0.1132541,0.11404,0.1148312,0.115628,0.1164303,0.1172382,0.1180517,0.1188708,0.1196956,0.1205261,0.1213624,0.1222045,0.1230524,0.1239062,0.124766,0.1256317,0.1265034,0.1273811,0.128265,0.129155,0.1300511,0.1309535,0.1318621,0.1327771,0.1336984,0.1346261,0.1355602,0.1365008,0.1374479,0.1384016,0.1393619,0.1403289,0.1413026,0.142283,0.1432703,0.1442644,0.1452654,0.1462733,0.1472883,0.1483103,0.1493393,0.1503755,0.1514189,0.1524696,0.1535275,0.1545928,0.1556654,0.1567455,0.1578331,0.1589283,0.160031,0.1611414,0.1622595,0.1633854,0.1645191,0.1656606,0.1668101,0.1679675,0.169133,0.1703065,0.1714882,0.1726781,0.1738762,0.1750827,0.1762975,0.1775208,0.1787526,0.1799929,0.1812418,0.1824993,0.1837656,0.1850407,0.1863246,0.1876175,0.1889193,0.1902301,0.1915501,0.1928792,0.1942175,0.1955651,0.196922,0.1982884,0.1996642,0.2010496,0.2024447,0.2038493,0.2052638,0.206688,0.2081222,0.2095662,0.2110203,0.2124845,0.2139589,0.2154435,0.2169384,0.2184436,0.2199593,0.2214855,0.2230223,0.2245698,0.226128,0.227697,0.2292769,0.2308678,0.2324697,0.2340827,0.2357069,0.2373424,0.2389893,0.2406475,0.2423173,0.2439986,0.2456916,0.2473964,0.249113,0.2508415,0.252582,0.2543346,0.2560993,0.2578763,0.2596656,0.2614673,0.2632815,0.2651084,0.2669478,0.2688001,0.2706652,0.2725433,0.2744343,0.2763385,0.2782559,0.2801867,0.2821308,0.2840884,0.2860596,0.2880444,0.290043,0.2920556,0.294082,0.2961225,0.2981772,0.3002462,0.3023295,0.3044272,0.3065395,0.3086665,0.3108082,0.3129648,0.3151363,0.317323,0.3195248,0.3217418,0.3239743,0.3262222,0.3284857,0.330765,0.33306,0.335371,0.337698,0.3400412,0.3424006,0.3447764,0.3471687,0.3495776,0.3520031,0.3544456,0.3569049,0.3593814,0.361875,0.3643859,0.3669142,0.3694601,0.3720237,0.374605,0.3772042,0.3798215,0.382457,0.3851107,0.3877828,0.3904735,0.3931829,0.395911,0.3986581,0.4014242,0.4042096,0.4070142,0.4098384,0.4126821,0.4155455,0.4184289,0.4213322,0.4242556,0.4271994,0.4301636,0.4331483,0.4361538,0.4391801,0.4422274,0.4452959,0.4483856,0.4514968,0.4546295,0.4577841,0.4609604,0.4641589,0.4673795,0.4706225,0.473888,0.4771761,0.480487,0.483821,0.487178,0.4905584,0.4939622,0.4973896,0.5008408,0.5043159,0.5078152,0.5113388,0.5148867,0.5184594,0.5220568,0.5256791,0.5293266,0.5329994,0.5366977,0.5404216,0.5441714,0.5479472,0.5517492,0.5555776,0.5594326,0.5633143,0.5672229,0.5711586,0.5751217,0.5791123,0.5831305,0.5871766,0.5912508,0.5953533,0.5994843,0.6036439,0.6078323,0.6120498,0.6162966,0.6205729,0.6248788,0.6292146,0.6335805,0.6379767,0.6424034,0.6468608,0.6513491,0.6558686,0.6604194,0.6650018,0.669616,0.6742622,0.6789407,0.6836516,0.6883952,0.6931717,0.6979814,0.7028244,0.7077011,0.7126115,0.7175561,0.7225349,0.7275484,0.7325965,0.7376798,0.7427982,0.7479523,0.753142,0.7583678,0.7636298,0.7689284,0.7742637,0.779636,0.7850456,0.7904928,0.7959777,0.8015007,0.807062,0.8126619,0.8183007,0.8239786,0.8296959,0.8354528,0.8412497,0.8470868,0.8529644,0.8588829,0.8648423,0.8708431,0.8768856,0.88297,0.8890966,0.8952657,0.9014776,0.9077327,0.9140311,0.9203732,0.9267593,0.9331898,0.9396648,0.9461848,0.95275,0.9593608,0.9660175,0.9727203,0.9794697,0.9862658,0.9931092,1,1.006939,1.013925,1.020961,1.028045,1.035178,1.042361,1.049593,1.056876,1.064209,1.071593,1.079029,1.086516,1.094055,1.101646,1.10929,1.116987,1.124737,1.132541,1.1404,1.148312,1.15628,1.164303,1.172382,1.180517,1.188708,1.196956,1.205261,1.213624,1.222045,1.230524,1.239062,1.24766,1.256317,1.265034,1.273811,1.28265,1.29155,1.300511,1.309535,1.318621,1.327771,1.336984,1.346261,1.355602,1.365008,1.374479,1.384016,1.393619,1.403289,1.413026,1.42283,1.432703,1.442644,1.452654,1.462733,1.472883,1.483103,1.493393,1.503755,1.514189,1.524696,1.535275,1.545928,1.556654,1.567455,1.578331,1.589283,1.60031,1.611414,1.622595,1.633854,1.645191,1.656606,1.668101,1.679675,1.69133,1.703065,1.714882,1.726781,1.738762,1.750827,1.762975,1.775208,1.787526,1.799929,1.812418,1.824993,1.837656,1.850407,1.863246,1.876175,1.889193,1.902301,1.915501,1.928792,1.942175,1.955651,1.96922,1.982884,1.996642,2.010496,2.024447,2.038493,2.052638,2.06688,2.081222,2.095662,2.110203,2.124845,2.139589,2.154435,2.169384,2.184436,2.199593,2.214855,2.230223,2.245698,2.26128,2.27697,2.292769,2.308678,2.324697,2.340827,2.357069,2.373424,2.389893,2.406475,2.423173,2.439986,2.456916,2.473964,2.49113,2.508415,2.52582,2.543346,2.560993,2.578763,2.596656,2.614673,2.632815,2.651084,2.669478,2.688001,2.706652,2.725433,2.744343,2.763385,2.782559,2.801867,2.821308,2.840884,2.860596,2.880444,2.90043,2.920556,2.94082,2.961225,2.981772,3.002462,3.023295,3.044272,3.065395,3.086665,3.108082,3.129648,3.151363,3.17323,3.195248,3.217418,3.239743,3.262222,3.284857,3.30765,3.3306,3.35371,3.37698,3.400412,3.424006,3.447764,3.471687,3.495776,3.520031,3.544456,3.569049,3.593814,3.61875,3.643859,3.669142,3.694601,3.720237,3.74605,3.772042,3.798215,3.82457,3.851107,3.877828,3.904735,3.931829,3.95911,3.986581,4.014242,4.042096,4.070142,4.098384,4.126821,4.155455,4.184289,4.213322,4.242556,4.271994,4.301636,4.331483,4.361538,4.391801,4.422274,4.452959,4.483856,4.514968,4.546295,4.577841,4.609604,4.641589,4.673795,4.706225,4.73888,4.771761,4.80487,4.83821,4.87178,4.905584,4.939622,4.973896,5.008408,5.043159,5.078152,5.113388,5.148867,5.184594,5.220568,5.256791,5.293266,5.329994,5.366977,5.404216,5.441714,5.479472,5.517492,5.555776,5.594326,5.633143,5.672229,5.711586,5.751217,5.791123,5.831305,5.871766,5.912508,5.953533,5.994843,6.036439,6.078323,6.120498,6.162966,6.205729,6.248788,6.292146,6.335805,6.379767,6.424034,6.468608,6.513491,6.558686,6.604194,6.650018,6.69616,6.742622,6.789407,6.836516,6.883952,6.931717,6.979814,7.028244,7.077011,7.126115,7.175561,7.225349,7.275484,7.325965,7.376798,7.427982,7.479523,7.53142,7.583678,7.636298,7.689284,7.742637,7.79636,7.850456,7.904928,7.959777,8.015007,8.07062,8.126619,8.183007,8.239786,8.296959,8.354528,8.412497,8.470868,8.529644,8.588829,8.648423,8.708431,8.768856,8.8297,8.890966,8.952657,9.014776,9.077327,9.140311,9.203732,9.267593,9.331898,9.396648,9.461848,9.5275,9.593608,9.660175,9.727203,9.794697,9.862658,9.931092,10,10.06939,10.13925,10.20961,10.28045,10.35178,10.42361,10.49593,10.56876,10.64209,10.71593,10.79029,10.86516,10.94055,11.01646,11.0929,11.16987,11.24737,11.32541,11.404,11.48312,11.5628,11.64303,11.72382,11.80517,11.88708,11.96956,12.05261,12.13624,12.22045,12.30524,12.39062,12.4766,12.56317,12.65034,12.73811,12.8265,12.9155,13.00511,13.09535,13.18621,13.27771,13.36984,13.46261,13.55602,13.65008,13.74479,13.84016,13.93619,14.03289,14.13026,14.2283,14.32703,14.42644,14.52654,14.62733,14.72883,14.83103,14.93393,15.03755,15.14189,15.24696,15.35275,15.45928,15.56654,15.67455,15.78331,15.89283,16.0031,16.11414,16.22595,16.33854,16.45191,16.56606,16.68101,16.79675,16.9133,17.03065,17.14882,17.26781,17.38762,17.50827,17.62975,17.75208,17.87526,17.99929,18.12418,18.24993,18.37656,18.50407,18.63246,18.76175,18.89193,19.02301,19.15501,19.28792,19.42175,19.55651,19.6922,19.82884,19.96642,20.10496,20.24447,20.38493,20.52638,20.6688,20.81222,20.95662,21.10203,21.24845,21.39589,21.54435,21.69384,21.84436,21.99593,22.14855,22.30223,22.45698,22.6128,22.7697,22.92769,23.08678,23.24697,23.40827,23.57069,23.73424,23.89893,24.06475,24.23173,24.39986,24.56916,24.73964,24.9113,25.08415,25.2582,25.43346,25.60993,25.78763,25.96656,26.14673,26.32815,26.51084,26.69478,26.88001,27.06652,27.25433,27.44343,27.63385,27.82559,28.01867,28.21308,28.40884,28.60596,28.80444,29.0043,29.20556,29.4082,29.61225,29.81772,30.02462,30.23295,30.44272,30.65395,30.86665,31.08082,31.29648,31.51363,31.7323,31.95248,32.17418,32.39743,32.62222,32.84857,33.0765,33.306,33.5371,33.7698,34.00412,34.24006,34.47764,34.71687,34.95776,35.20031,35.44456,35.69049,35.93814,36.1875,36.43859,36.69142,36.94601,37.20237,37.4605,37.72042,37.98215,38.2457,38.51107,38.77828,39.04735,39.31829,39.5911,39.86581,40.14242,40.42096,40.70142,40.98384,41.26821,41.55455,41.84289,42.13322,42.42556,42.71994,43.01636,43.31483,43.61538,43.91801,44.22274,44.52959,44.83856,45.14968,45.46295,45.77841,46.09604,46.41589,46.73795,47.06225,47.3888,47.71761,48.0487,48.3821,48.7178,49.05584,49.39622,49.73896,50.08408,50.43159,50.78152,51.13388,51.48867,51.84594,52.20568,52.56791,52.93266,53.29994,53.66977,54.04216,54.41714,54.79472,55.17492,55.55776,55.94326,56.33143,56.72229,57.11586,57.51217,57.91123,58.31305,58.71766,59.12508,59.53533,59.94843,60.36439,60.78323,61.20498,61.62966,62.05729,62.48788,62.92146,63.35805,63.79767,64.24034,64.68608,65.13491,65.58686,66.04194,66.50018,66.9616,67.42622,67.89407,68.36516,68.83952,69.31717,69.79814,70.28244,70.77011,71.26115,71.75561,72.25349,72.75484,73.25965,73.76798,74.27982,74.79523,75.3142,75.83678,76.36298,76.89284,77.42637,77.9636,78.50456,79.04928,79.59777,80.15007,80.7062,81.26619,81.83007,82.39786,82.96959,83.54528,84.12497,84.70868,85.29644,85.88829,86.48423,87.08431,87.68856,88.297,88.90966,89.52657,90.14776,90.77327,91.40311,92.03732,92.67593,93.31898,93.96648,94.61848,95.275,95.93608,96.60175,97.27203,97.94697,98.62658,99.31092,100];
    data = 1
    if request.method == "POST":
        data = request.POST["send"]
        print(data)
    data = int(data)*2
    return render(request, "main/test.html", {
                "data": data,
                "omega": omega,
                "ph": ph,
                "mag": mag
            })

def register(request):
    try: # Check if already logged in and have an account
        user = User.objects.get(username=request.user)
        return HttpResponseRedirect(reverse("home"))
    except :
        if request.method == "POST":
            username = request.POST.get("username")
            first=request.POST.get("first")
            last=request.POST.get("last")
            major= request.POST.get("major")
            email = request.POST.get("email")
            code=request.POST.get("code")
            agree=request.POST.get("agree")
            password = request.POST.get("password")
            confirmation = request.POST.get("confirmation")
            # Attempt to create new user
            # If the user is an instructor
            if request.POST.get("instructor"):
                # Ensure all fields are filled correctly
                if not password or not email or not username or not first or not last:
                    return render(request, "main/register.html", {
                        "instMSG": "Make sure all fields are filled."
                    })
                # Ensure password matches confirmation
                if password != confirmation:
                    return render(request, "main/register.html", {
                        "instMSG": "Passwords must match."
                    })
                # Ensure that the user agrees to all terms and privacy policy
                if not request.POST.get("agree")=="on":
                    return render(request, "main/register.html", {
                        "instMSG": "You need to agree on the terms in order to sign up."
                    })
                try:
                    user = User.objects.create_user(username, email, password,status="i",first_name=first,last_name=last)
                    user.save()
                    instructor=Instructor.objects.create(credentials=user,major=major)
                    instructor.save()
                except IntegrityError:
                    return render(request, "main/register.html", {
                        "instMSG": "Username already taken."
                    })
            # If the user is a student
            elif request.POST.get("student"):
                # Ensure all fields are filled correctly
                if not password or not email or not username or not first or not last:
                    return render(request, "main/register.html", {
                        "studMSG": "Make sure all fields are filled."
                    })
                # Ensure password matches confirmation
                if password != confirmation:
                    return render(request, "main/register.html", {
                        "studMSG": "Passwords must match."
                    })
                # Ensure that the user agrees to all terms and privacy policy
                if not request.POST.get("agree")=="on":
                    return render(request, "main/register.html", {
                        "studMSG": "You need to agree on the terms in order to sign up."
                   })  
                try: # Creating New User
                    try : # Check if the Course Code is valid.
                        temp = UUID(code,version=4)
                    except:
                        return render(request, "main/register.html", {
                        "studMSG": "Make sure that your course code is valid."
                    })
                    course=Course.objects.get(code=code)
                    user = User.objects.create_user(username, email, password,status="s",first_name=first,last_name=last)
                    user.save()
                    student=Student.objects.create(credentials=user,courses=course,major=major)
                    student.save()
                except IntegrityError:
                    return render(request, "main/register.html", {
                        "studMSG": "Username already taken."
                    })
                if not code:
                    return render(request, "main/register.html", {
                        "studMSG": "Make sure to enter your course code correctly."
                    })
            login(request, user)
            return HttpResponseRedirect(reverse("home"))
        else:
            return render(request, "main/register.html")
def login_view(request):
    if request.method == "POST":
        # Attempt to sign user in
        username = request.POST["username"]
        password = request.POST["password"]
        user = authenticate(request, username=username, password=password)
        # Check if authentication successful
        if user is not None:
            login(request, user)
            return HttpResponseRedirect(reverse("home"))
        else:
            return render(request, "main/login.html", {
                "message": "Invalid username and/or password."
            })
    else:
        return render(request, "main/login.html")

def logout_view(request):
    logout(request)
    return HttpResponseRedirect(reverse("home"))

def student(request):
    try:
        assignments=[]
        student=Student.objects.get(credentials=request.user)
        for something in student.courses.assignments.filter():
            for sub in Submission.objects.filter(student=student):
                print(something)
            assignments.append(something)
        return render(request,"main/student.html",{
            "student":student,
            "assignments": assignments
        })
    except:
        return HttpResponseRedirect(reverse("home")) 

def instructor(request):
    try:    
        instructor= Instructor.objects.get(credentials=request.user)
    except:
        return HttpResponseRedirect(reverse("home"))
    courses=[]
    assignments=[]
    simulators=[]
    courseAssignments=[] #Assignmentsn in each course 
    courseAssignment={} #course:assignment pairs
    assignmentSubmissions=[]
    course=Course.objects.filter(instructor=request.user)
    assignment=Assignment.objects.filter(instructor=request.user)
    for something in course:
        for assign in something.assignments.all():
            courseAssignments.append(assign.subject)
        courseAssignment[something.name]=courseAssignments[:]
        courseAssignments.clear()
    for something in assignment:
        assignments.append(something)    
    for choice in Assignment.simulator_choices:
        simulators.append(choice[0])
    if request.POST:
        if request.POST.get("sim"):
            # Reminder: Check if there are missing fields
            sim = request.POST.get("sim")
            course = request.POST.get("course")
            desc = request.POST.get("desc")
            due = request.POST.get("due")
            subject = request.POST.get("assignmentSubject")
            assign=Assignment.objects.create(subject=subject,dueDate=due,simulator=sim,describtion=desc,score=5,instructor=request.user.username) #Scoere Adjust
            assign.save()
            course=Course.objects.get(name=course)
            course.assignments.add(assign)
            return HttpResponseRedirect(reverse("instructor"))
        if request.POST.get("courseName"):
        # Reminder: Check if there are missing fields
            courseName = request.POST.get("courseName")
            course=Course.objects.create(name=courseName,instructor=request.user)
            course.save
            return HttpResponseRedirect(reverse("instructor"))
        elif request.POST.get("course"):
            students=[]
            # Reminder: Check if there are missing fields
            course = request.POST.get("course")
            assignment = request.POST.get("assign")
            course=Course.objects.get(name=course)
            student= Student.objects.filter(courses=course)
            assign= Assignment.objects.filter(subject=assignment)
            for name in student:
                    submission= Submission.objects.filter(student=name,assignment__in=assign)
            try:
                print(submission)
            except:
                submission= ["Nothing Submitted Yet"]
            return render(request,"main/instructor.html",{
                "instructor":instructor,
                "students":students,
                "submissions":submission,
                "courses":courses,
                "assignments":assignments,
                "simulators":simulators,
            })
    else:   
        return render(request,"main/instructor.html",{
            "instructor":instructor,
            "assignments": assignments,
            "simulators": simulators,
            "courseAssignment":courseAssignment,
        }) 


def cruise(request):
    v = [15.0, 14.517994703951095, 14.990900693284932, 15.448906990430494, 15.893289393001073, 16.32514885061716, 16.745443289989346, 17.15501235913015, 17.554596926348335, 17.944854629518034, 18.32637241196884, 18.699676731958508, 19.065241951262685, 19.42349728475093, 19.774832601677062, 20.119603302370187, 20.4581344463261, 20.790724272620878, 21.117647193377714, 21.43915637904837, 21.755485995613334, 22.0668531476201, 22.37345957312496, 22.675493128155296, 22.97312909151734, 23.266531316309294, 23.555853249335666, 23.84123883631197, 24.122823328394755, 24.40073400283375, 24.675090808656993, 24.946006946406506, 25.21358939061125, 25.477939360873883, 25.73915274886799, 25.99732050465424, 26.252528988091846, 26.504860288871456, 26.754392518261742, 27.001200075797467, 27.24535389326923, 27.486921658938925, 27.72596802281114, 27.962554785996637, 28.196741074763118, 28.428583501776206, 28.658136314391232, 28.882010732068178, 29.09926917837794, 29.310402907860517, 29.515419573035103, 29.7144806004295, 29.907690973776678, 30.095168627665032, 30.27702221367454, 30.453358643081774, 30.62428097890266, 30.789889401596323, 30.950281170051472, 31.10555124823723, 31.255791294629137, 31.401091168658464, 31.54153835141748, 31.67721830436581, 31.80821452483026, 31.934608683307502, 32.056480724017845, 32.173908967434556, 32.28697020207979, 32.39573977151399, 32.500291654643284, 32.600698541081115, 32.6970319006869, 32.78936204936937, 32.877758209922504, 32.96228856818084, 33.04302032750444, 33.12001975714846, 33.193352239530746, 33.26308231057252, 33.32927370296353, 33.39198938414369, 33.45129159191787, 33.50724186124898, 33.55990106121566, 33.60932943392812, 33.655586607990735, 33.69873162750894, 33.73882297442078, 33.77591859064857, 33.81007589833055, 33.84135181873918, 33.8698027898146, 33.89548478242802, 33.91845331542986, 33.93876346954857, 33.95646990019717, 33.971626849241986, 33.9842881557839, 33.99450726599956, 34.002337242086504, 34.00783077035343, 34.01104016849476, 34.01201739208538, 34.01081404033023, 34.007481361100616, 34.00207025528797, 33.994631280503405, 33.98521465415077, 33.97387025589852, 33.96064762957526, 33.94559598451236, 33.928764196355665, 33.91020080736804, 33.88995402624309, 33.86807172744976, 33.84460145012699, 33.81959039654657, 33.79308543016251, 33.76513307326371, 33.735779504247255, 33.705070554528795, 33.673051705106076, 33.63976808279163, 33.6052644561304, 33.569585231017484, 33.53277444603165, 33.494875767499515, 33.45593248430555, 33.41598750246291, 33.375083339460005, 33.33326211839758, 33.29056556193145, 33.2470349860355, 33.20271129359989, 33.15763496787952, 33.111846065807654, 33.065384211189524, 33.018288587791105, 32.97059793233827, 32.92235052744104, 32.87358419445859, 32.82433628631979, 32.77464368031495, 32.72454277087352, 32.67406946234352, 32.62325916178779, 32.572146771812214, 32.5207666834413, 32.469152769056485, 32.41733837541187, 32.36535631674298, 32.31323886798313, 32.26101775810241, 32.208724163584, 32.15638870205233, 32.10404142606736, 32.051711817099225, 31.999428779697062, 31.947220635865563, 31.89511511966269, 31.84313937203147, 31.791319935878445, 31.739682751411117, 31.68825315174621, 31.637055858800053, 31.586114979472214, 31.535454002132642, 31.485095793422435, 31.435062595377463, 31.385376022883943, 31.336057061473916, 31.2871260654686, 31.23860275647641, 31.19050622225225, 31.142854915923603, 31.095666655588733, 31.048958624291146, 31.002747370374166, 30.95704880821848, 30.91187821936503, 30.8672502540247, 30.823178932975637, 30.77967764984833, 30.736759173797772, 30.694435652561314, 30.652718615900298, 30.611618979422417, 30.571147048781555, 30.531312524250783, 30.4921245056637, 30.453591497718577, 30.41572141563916, 30.378521591185308, 30.34199877900608, 30.306159163327266, 30.271008364964832, 30.23655144865518, 30.20279293069263, 30.169736786864092, 30.137386460670278, 30.105744871822704, 30.074814425004952, 30.04459701888662, 30.01509405537788, 29.986306449112337, 29.958234637145654, 29.930878588857034, 29.904237816040688, 29.878311383174097, 29.853097917849645, 29.828595621356495, 29.80480227939905, 29.781715272938648, 29.759331589144995, 29.737647832443926, 29.71666023564805, 29.696364671157113, 29.676756662214874, 29.657831394209467, 29.639583726004457, 29.622008201287926, 29.605099059927195, 29.58885024931702, 29.573255435709324, 29.558308015512882, 29.54400112655165, 29.530327659270668, 29.517280267878956, 29.504851381419048, 29.493033214753176, 29.481817779456595, 29.47119689460874, 29.461162197473463, 29.45170515405992, 29.44281706955606, 29.43448909862707, 29.42671225557166, 29.419477424329205, 29.412775368331584, 29.406596740193464, 29.400932091235646, 29.39577188083622, 29.391106485604695, 29.386926208374817, 29.38322128701202, 29.379981903031894, 29.37719819002641, 29.374860241895163, 29.372958120878923, 29.371481865393505, 29.37042149766205, 29.369767031144274, 29.369508477761496, 29.369635854916627, 29.370139192308535, 29.37100853854056, 29.372233967523147, 29.373805584670947, 29.37571353289489, 29.37794799838993, 29.38049921621972, 29.383357475699132, 29.386513125576307, 29.389956579015763, 29.39367831838446, 29.39766889984271, 29.40191895774224, 29.406419208833615, 29.4111604562855, 29.41613359351843, 29.4213296078557, 29.42673958399424, 29.432354707298426, 29.438166266919808, 29.44416565874588, 29.45034438818102, 29.45669407276297, 29.463206444617974, 29.469873352758075, 29.476686765223917, 29.483638771076414, 29.490721582240884, 29.49792753520698, 29.505249092588027, 29.512678844543178, 29.52020951006601, 29.527833938142923, 29.535545108784994, 29.54333613393667, 29.55120025826482, 29.55913085983162, 29.567121450654636, 29.57516567715761, 29.583257320515266, 29.591390296895423, 29.59955865760193, 29.607756589121383, 29.615978413077148, 29.624218586093708, 29.632471699574474, 29.640732479396267, 29.64899578552338, 29.657256611544295, 29.665510084134002, 29.673751462444734, 29.681976137428062, 29.69017963109105, 29.698357595689235, 29.706505812859096, 29.714620192692674, 29.722696772756784, 29.730731717059502, 29.738721314966224, 29.74666198006779, 29.75455024900294, 29.762382780237466, 29.770156352802196, 29.777867864992096, 29.78551433302849, 29.79309288968657, 29.800600782890093, 29.808035374275413, 29.815394137726482, 29.822674657882963, 29.82987462862303, 29.836991851522807, 29.844024234293922, 29.850969789201088, 29.85782663146114, 29.864592977625136, 29.87126714394509, 29.877847544726755, 29.884332690669876, 29.89072118719737, 29.897011732774693, 29.903203117220716, 29.909294220011425, 29.9152840085776, 29.921171536597676, 29.92695594228689, 29.932636446683954, 29.938212351936134, 29.943683039583895, 29.949047968846106, 29.954306674906686, 29.959458767203742, 29.964503927721957, 29.969441909289262, 29.974272533878498, 29.978995690914893, 29.98361133559021, 29.98811948718426, 29.992520227394458, 29.996813698674217, 30.001000102580786, 30.005079698133194, 30.009052800180875, 30.012919777783658, 30.01668105260359, 30.020337097309245, 30.02388843399291, 30.02733563260129, 30.03067930938013, 30.033920125333214, 30.037058784696217, 30.040096033425836, 30.043032657704497, 30.045869482461192, 30.048607369908662, 30.05124721809733, 30.05378995948632, 30.056236559531843, 30.058588015293275, 30.060845354057186, 30.06300963197957, 30.065081932746544, 30.067063366253745, 30.068955067304643, 30.070758194327947, 30.072473928114313, 30.074103470572535, 30.075648043505343, 30.077108887405036, 30.07848726026898, 30.079784436435112, 30.08100170543773, 30.082140370883348, 30.083201749346998, 30.08418716928891, 30.085097969991658, 30.0859355005178, 30.086701118688143, 30.08739619008053, 30.088022087049293, 30.08858018776531, 30.089071875276698, 30.089498536590114, 30.089861561772643, 30.09016234307434, 30.090402274071163, 30.09058274882856, 30.090705161085367, 30.090770903458182, 30.09078136666598, 30.090737938774968, 30.090642004463657, 30.090494944307846, 30.090298134085735, 30.090052944102716, 30.089760738536004, 30.089422874798842, 30.089040702924166, 30.088615564967636, 30.088148794429898, 30.087641715697814, 30.08709564350471, 30.086511882409283, 30.08589172629311, 30.08523645787659, 30.084547348253096, 30.083825656441185, 30.08307262895464, 30.082289499390292, 30.081477488033187, 30.080637801479156, 30.07977163227435, 30.07888015857176, 30.07796454380431, 30.077025936374415, 30.076065469359797, 30.075084260235222, 30.0740834106101, 30.07306400598156, 30.072027115502895, 30.070973791767013, 30.06990507060479, 30.06882197089799, 30.067725494406535, 30.066616625609903, 30.065496331562397, 30.06436556176198, 30.063225248032538, 30.062076304419186, 30.060919627096517, 30.05975609428935, 30.058586566205935, 30.05741188498314, 30.05623287464356, 30.055050341064145, 30.053865071956164, 30.052677836856223, 30.05148938712808, 30.050300455974966, 30.04911175846225, 30.047923991550043, 30.04673783413562, 30.045553947105297, 30.04437297339558, 30.04319553806328, 30.042022248364365, 30.040853693841267, 30.03969044641843, 30.038533060505774, 30.037382073109946, 30.03623800395294, 30.035101355597984, 30.033972613582392, 30.0328522465571, 30.03174070643267, 30.0306384285316, 30.02954583174649, 30.0284633187041, 30.027391275934814, 30.026330074047465, 30.025280067909154, 30.024241596829913, 30.023214984751974, 30.02220054044339, 30.021198557695808, 30.020209315526213, 30.01923307838233, 30.018270096351586, 30.017320605373307, 30.016384827454097, 30.015462970886, 30.01455523046741, 30.01366178772647, 30.01278281114674, 30.011918456394973, 30.011068866550843, 30.01023417233836, 30.009414492358882, 30.008609933325456, 30.007820590298415, 30.00704654692196, 30.006287875661638, 30.0055446380425, 30.00481688488786, 30.00410465655832, 30.00340798319118, 30.00272688493982, 30.00206137221308, 30.001411445914417, 30.00077709768073, 30.000158310120703, 29.999555057052554, 29.99896730374105, 29.998395007133656, 29.99783811609571, 29.997296571644547, 29.996770307182327, 29.99625924872764, 29.995763315145627, 29.99528241837662, 29.994816463663103, 29.99436534977504, 29.99392896923329, 29.993507208531224, 29.99309994835426, 29.99270706379739, 29.99232842458056, 29.991963895261794, 29.991613335448047, 29.991276600003715, 29.99095353925665, 29.990643999201758, 29.990347821702, 29.990064844686795, 29.989794902347764, 29.98953782533176, 29.989293440931128, 29.98906157327119, 29.98884204349485, 29.98863466994431, 29.988439268339913, 29.988255651955967, 29.98808363179362, 29.987923016750724, 29.98777361378861, 29.98763522809586, 29.98750766324896, 29.98739072136984, 29.987284203280325, 29.987187908653418, 29.98710163616147, 29.98702518362117, 29.986958348135378, 29.986900926231804, 29.986852713998516, 29.986813507216247, 29.986783101487575, 29.986761292362903, 29.986747875463298, 29.986742646600163, 29.986745401891774, 29.986755937876648, 29.986774051623833, 29.98679954084005, 29.986832203973744, 29.986871840316077, 29.986918250098817, 29.98697123458922, 29.98703059618187, 29.98709613848752, 29.98716766641897, 29.98724498627395, 29.987327905815132, 29.987416234347183, 29.987509782790994, 29.987608363755015, 29.98771179160383, 29.987819882523883, 29.98793245458652, 29.98804932780824, 29.988170324208326, 29.98829526786375, 29.988423984961532, 29.988556303848462, 29.988692055078303, 29.988831071456474, 29.988973188082248, 29.989118242388543, 29.989266074179277, 29.98941652566442, 29.98956944149265, 29.989724668781808, 29.98988205714705, 29.99004145872684, 29.99020272820677, 29.99036572284127, 29.9905303024732, 29.990696329551476, 29.990863669146645, 29.991032188964525, 29.991201759357942, 29.991372253336582, 29.99154354657502, 29.991715517418985, 29.991888046889834, 29.99206101868735, 29.99223431919092, 29.992407837458995, 29.99258146522706, 29.992755096904045, 29.9929286295672, 29.993101962955585, 29.993274999462084, 29.993447644124082, 29.993619804612802, 29.99379139122134, 29.993962316851466, 29.9941324969992, 29.994301849739212, 29.99447029570811, 29.9946377580866, 29.99480416258062, 29.994969437401434, 29.99513351324476, 29.995296323268953, 29.995457803072263, 29.995617890669248, 29.995776526466354, 29.99593365323666, 29.996089216093893, 29.996243162465724, 29.996395442066333, 29.99654600686835, 29.996694811074132, 29.996841811086508, 29.996986965478875, 29.997130234964853, 29.99727158236738, 29.997410972587375, 29.99754837257193, 29.997683751282157, 29.997817079660567, 29.997948330598202, 29.998077478901365, 29.998204501258098, 29.998329376204396, 29.99845208409015, 29.99857260704493, 29.998690928943542, 29.998807035371417, 29.998920913589917, 29.99903255250145, 29.99914194261457, 29.99924907600898, 29.999353946300456, 29.999456548605814, 29.999556879507843, 29.999654937020242, 29.999750720552623, 29.999844230875567, 29.999935470085763, 30.000024441571224, 30.000111149976647, 30.00019560116888, 30.000277802202568, 30.00035776128594, 30.00043548774678, 30.000510991998624, 30.00058428550713, 30.00065538075671, 30.0007242912174, 30.000791031311934, 30.000855616383173, 30.000918062661746, 30.00097838723401, 30.001036608010303, 30.00109274369353, 30.00114681374805, 30.001198838368936, 30.001248838451534, 30.001296835561412, 30.00134285190466, 30.00138691029855, 30.00142903414261, 30.001469247390038, 30.001507574519568, 30.001544040507667, 30.001578670801212, 30.001611491290525, 30.001642528282847, 30.00167180847625, 30.00169935893395, 30.001725207059074, 30.001749380569848, 30.001771907475245, 30.001792816051047, 30.001812134816404, 30.00182989251077, 30.00184611807135, 30.00186084061099, 30.0018740893965, 30.001885893827446, 30.00189628341539, 30.001905287763627, 30.001912936547313, 30.001919259494123, 30.00192428636531, 30.001928046937252, 30.00193057098345, 30.001931886447924, 30.001932027291755, 30.001931019957844, 30.001928895070186, 30.001925681802277, 30.00192140966416, 30.001916107909153, 30.001909805705075, 30.001902532060747, 30.001894315831557, 30.001885185700257, 30.001875170166308, 30.00186429753298, 30.001852595895784, 30.00184009313103, 30.001826816884876, 30.001812794562774, 30.001798053319366, 30.001782620048694, 30.001766521374925, 30.00174978364336, 30.001732432911936, 30.001714494943016, 30.001695995195647, 30.001676958818134, 30.001657410641013, 30.001637375170382, 30.00161687658159, 30.001595938713297, 30.00157458506185, 30.001552838776032, 30.001530722652166, 30.001508259129476, 30.00148547028587, 30.001462377833988, 30.00143900311757, 30.001415367108155, 30.00139149040205, 30.001367393217645, 30.001343095392972, 30.001318616383593, 30.001293975260715, 30.00126919070965, 30.001244281028463, 30.00121926412696, 30.001194157525873, 30.001168978356326, 30.00114374335953, 30.001118468886737, 30.001093170899406, 30.001067864969606, 30.001042566280613, 30.001017289627782, 30.000992049419562, 30.000966859678744, 30.000941734043927, 30.000916685771106, 30.000891727735542, 30.000866872433715, 30.00084213198553, 30.00081751813663, 30.000793042260916, 30.0007687153632, 30.000744548082007, 30.000720550692552, 30.000696733109816, 30.00067310489178, 30.000649675242798, 30.000626453017073, 30.000603446722263, 30.000580664523206, 30.000558114245734, 30.00053580338063, 30.000513739087623, 30.000491928199555, 30.00047037722656, 30.000449092360377, 30.00042807947873, 30.000407344149792, 30.000386891636683, 30.00036672690209, 30.000346854612904, 30.000327279144926, 30.000308004587662, 30.00028903474909, 30.000270373160557, 30.000252023081657, 30.000233987505172, 30.000216269162056, 30.000198870526404, 30.000181793820516, 30.000165041019905, 30.0001486138584, 30.00013251383319, 30.000116742209944, 30.000101300027904, 30.000086188104984, 30.00007140704289, 30.000056957232225, 30.000042838857574, 30.00002905190263, 30.000015596155258, 30.000002471212582, 29.99998967648603, 29.9999772112064, 29.999965074428832, 29.99995326503787, 29.999941781752376, 29.999930623130517, 29.99991978757465, 29.999909273336225, 29.999899078520627, 29.999889201091992, 29.999879638877957, 29.999870389574447, 29.99986145075031, 29.99985281985202, 29.99984449420824, 29.9998364710344, 29.999828747437224, 29.99982132041914, 29.999814186882748, 29.99980734363514, 29.999800787392218, 29.999794514782938, 29.999788522353505, 29.999782806571517, 29.999777363830027, 29.999772190451573, 29.99976728269214, 29.999762636745054, 29.99975824874482, 29.999754114770894, 29.999750230851408, 29.999746592966805, 29.99974319705343, 29.999740039007047, 29.999737114686297, 29.9997344199161, 29.99973195049096, 29.99972970217824, 29.999727670721335, 29.999725851842815, 29.999724241247485, 29.999722836556913, 29.99972162891628, 29.999720618820255, 29.999719797569227, 29.9997191645184, 29.999718712997698, 29.999718439426474, 29.999718339238612, 29.999718408286594, 29.99971864201299, 29.999719036837487, 29.99971958714601, 29.999720290617073, 29.999721140417606, 29.999722134134288, 29.999723268532392, 29.999724537700605, 29.999725938022266, 29.999727465180314, 29.999729115120896, 29.99973088374634, 29.99973276701587, 29.999734760915363, 29.99973686146908, 29.999739064737817, 29.999741366821358, 29.999743763859456, 29.999746252033248, 29.99974882756637, 29.99975148672621, 29.999754225824958, 29.999757041220658, 29.99975992931822, 29.999762886570387, 29.99976590947857, 29.999768994593737, 29.99977213851719, 29.999775337901287, 29.99977858945017, 29.99978188992037, 29.99978523612143, 29.999788624916434, 29.99979205322253, 29.99979551801139, 29.9997990163096, 29.999802545199056, 29.999806101817278, 29.999809683357725, 29.999813287070022, 29.999816910260154, 29.999820550290682, 29.999824204580822, 29.9998278706066, 29.999831545900854, 29.999835228053293, 29.99983891471047, 29.999842603575754, 29.99984629240924, 29.999849979027655, 29.999853661304215, 29.99985733716844, 29.999861004605993, 29.9998646616584, 29.99986830642287, 29.999871937051935, 29.99987555175321, 29.999879148789024, 29.999882726476095, 29.999886283185113, 29.99988981734039, 29.99989332741939, 29.999896811952315, 29.99990026952165, 29.999903698761642, 29.999907098357856, 29.999910467046597, 29.999913803614426, 29.999917106897577, 29.999920375781407, 29.99992360919981, 29.999926806134614, 29.999929965614978, 29.999933086716776, 29.99993616856196, 29.999939210317915, 29.999942211196796, 29.999945170454883, 29.999948087391875, 29.999950961350244, 29.999953791714525, 29.99995657791059, 29.999959319405015, 29.99996201570429, 29.999964666354145, 29.999967270938814, 29.999969829080325, 29.999972340437743, 29.999974804706465, 29.99997722161744, 29.999979590936466, 29.999981912463447, 29.99998418603164, 29.999986411506892, 29.999988588786938, 29.999990717800614, 29.99999279850715, 29.99999483089539, 29.999996814983078, 29.999998750816097, 30.00000063846776, 30.000002478038034, 30.000004269652834, 30.0000060134633, 30.000007709645025, 30.000009358397403, 30.00001095994283, 30.000012514526073, 30.000014022413485, 30.00001548389235, 30.000016899270165, 30.00001826887396, 30.00001959304959, 30.000020872161077, 30.000022106589913, 30.00002329510005, 30.00002444194152, 30.000025544636483, 30.000026604563008, 30.000027621880577, 30.000028597157936, 30.000029530849798, 30.000030423463972, 30.000031274336877, 30.000032085620617, 30.000032857321454, 30.00003359014675, 30.000034285546704, 30.000034942758248, 30.000035562773647, 30.000036145231235, 30.00003669188542, 30.000037202947908, 30.000037679133143, 30.00003812160969, 30.000038529568975, 30.00003890469672, 30.000039247732623, 30.000039558299264, 30.000039838203676, 30.0000400872523, 30.00004030603424, 30.000040495539803, 30.000040656282003]
    return render(request,"main/cruise.html",{
        "speed_samples": v,
    })
def adaptive(request):
    return render(request,"main/adaptive.html")